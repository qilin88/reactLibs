{"version":3,"sources":["../../src/lib/makin-ur-text.ts"],"names":["MakinUrText","constructor","seed","freq","spread","animate","speed","duration","force","_loltext","_cursorz","_wait4Turn","CanHazTurn","stream","makeStreamPlz","izGudArg","number","positive","_seed","none","_freq","TEH_DEFAULT_OPSHUNZ","_spread","_animate","Boolean","yesCursor","process","exit","_speed","_duration","_muhChalk","chalk","Instance","level","undefined","writeDis","data","emit","pipe","wrappedPipe","destStream","opts","push","anStream","bind","forEach","cursor","show","noCursor","hide","colorizeUrLine","line","split","map","char","index","red","green","blue","rgb","join","animateUrLine","urLine","acquire","i","readlienz","cursorTo","urColorizedLine","substr","yargz","terminalWidth","write","makeLine","colorizedLine","fromString","urString","urLien","fromStream","urStream","Promise","keep","noKeep","urStreamWasTakingTooLong","setTimeout","Error","resume","setEncoding","on","tehLine","clearTimeout","fromFile","urFile","urLinez","urFilez","readFile","EOL","disLine","toString","trim","urOpshunz","urLoltext"],"mappings":"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","sourcesContent":["import { EOL } from 'os';\nimport readlienz from 'readline';\nimport streamz from 'stream';\n\nimport byeByeMeow from '@darkobits/adeiu';\nimport sleep from '@darkobits/sleep';\nimport newCursorPlz from 'ansi';\nimport CanHazTurn from 'async-lock';\nimport chalk, { Chalk } from 'chalk';\nimport izGudArg from 'ow';\nimport pEechSeriez from 'p-each-series';\n// @ts-ignore\nimport forTehStreamToBecomeFinished from 'p-stream';\nimport urFilez from 'fs-extra';\nimport byLinesPlz from 'split2';\nimport noColorzPlz from 'strip-color';\nimport iCanHazThruStream from 'through';\nimport yargz from 'yargs';\n\nimport {howHigh, howLong, howMuch, idk, loltext, newp, MuhLolcatOpts, yesOrNo} from 'etc/typez';\nimport { none, TEH_DEFAULT_OPSHUNZ } from 'etc/constantz';\nimport { makeItRainbow, randyNumPlz } from 'lib/random-tingz';\n\n\nexport default class MakinUrText {\n  /**\n   * It's not nice to tamper with globals so we make a speshul chalk just for\n   * us.\n   */\n  private readonly _muhChalk: Chalk;\n\n  /**\n   * Cursors for teh streams we get piped to.\n   */\n  private readonly _cursorz: Array<idk>;\n\n  /**\n   * Rainbow frequency.\n   */\n  private readonly _freq: howLong;\n\n  /**\n   * Rainbow spread.\n   */\n  private readonly _spread: howMuch;\n\n  /**\n   * Animate ur linez?\n   */\n  private readonly _animate: yesOrNo;\n\n  /**\n   * Makes animation go faster.\n   */\n  private readonly _speed: howMuch;\n\n  /**\n   * How much duration for animating.\n   */\n  private readonly _duration: howLong;\n\n  /**\n   * So we only anime 1 of ur linez at a tiem.\n   */\n  private readonly _wait4Turn: CanHazTurn;\n\n  /**\n   * Rainbow seed.\n   */\n  private _seed: howMuch;\n\n  /**\n   * Keeps all the loltext we make.\n   */\n  private _loltext: loltext;\n\n\n  /**\n   * Duplex stream to which colorized output is written. This stream may also be\n   * piped into another writable stream, such as process.stdout.\n   */\n  stream: iCanHazThruStream.ThroughStream;\n\n\n  constructor({seed, freq, spread, animate, speed, duration, force}: MuhLolcatOpts = {}) {\n    this._loltext = '';\n\n    this._cursorz = [];\n\n    this._wait4Turn = new CanHazTurn();\n\n    this.stream = this.makeStreamPlz();\n\n    if (seed) {\n      izGudArg(seed, 'seed', izGudArg.number.positive);\n      this._seed = seed;\n    } else {\n      this._seed = randyNumPlz(none, 256);\n    }\n\n    if (freq) {\n      izGudArg(freq, 'freq', izGudArg.number);\n      this._freq = freq;\n    } else {\n      this._freq = TEH_DEFAULT_OPSHUNZ.freq;\n    }\n\n    if (spread) {\n      izGudArg(spread, 'spread', izGudArg.number);\n      this._spread = spread;\n    } else {\n      this._spread = TEH_DEFAULT_OPSHUNZ.spread;\n    }\n\n    this._animate = Boolean(animate);\n\n    if (this._animate) {\n      byeByeMeow(() => {\n        this.yesCursor();\n        // eslint-disable-next-line unicorn/no-process-exit\n        process.exit(none);\n      });\n    }\n\n    if (speed) {\n      izGudArg(speed, 'speed', izGudArg.number);\n      this._speed = speed;\n    } else {\n      this._speed = TEH_DEFAULT_OPSHUNZ.speed;\n    }\n\n    if (duration) {\n      izGudArg(duration, 'duration', izGudArg.number);\n      this._duration = duration;\n    } else {\n      this._duration = TEH_DEFAULT_OPSHUNZ.duration;\n    }\n\n    this._muhChalk = new chalk.Instance(force ? {\n      level: 2\n    } : undefined);\n  }\n\n\n  /**\n   * Makes an strem for us.\n   */\n  private makeStreamPlz() {\n    function writeDis(this: iCanHazThruStream.ThroughStream, data: idk) {\n      this.emit('data', data);\n    }\n\n    const pipe = (wrappedPipe: any) => {\n      return (destStream: idk, opts?: idk) => {\n        this._cursorz.push(newCursorPlz(destStream));\n        return wrappedPipe(destStream, opts);\n      };\n    };\n\n    const anStream = iCanHazThruStream(writeDis);\n    anStream.pipe = pipe(anStream.pipe.bind(anStream));\n    return anStream;\n  }\n\n\n  /**\n   * Brings ur cursor back 4 u.\n   */\n  private yesCursor() {\n    this._cursorz.forEach(cursor => {\n      cursor.show();\n    });\n  }\n\n\n  /**\n   * Hides ur cursor 4 u.\n   */\n  private noCursor() {\n    this._cursorz.forEach(cursor => {\n      cursor.hide();\n    });\n  }\n\n\n  /**\n   * Turns text into -----> !loltext!.\n   */\n  private colorizeUrLine(line: string): loltext {\n    return noColorzPlz(line).split('').map((char: idk, index: howHigh) => {\n      const {red, green, blue} = makeItRainbow(this._freq, this._seed + index / this._spread);\n      return this._muhChalk.rgb(red, green, blue)(char);\n    }).join('');\n  }\n\n\n  /**\n   * Makes ur linez animated. FTW!\n   */\n  private async animateUrLine(urLine: string) {\n    return this._wait4Turn.acquire('meow', async () => {\n      const seed = this._seed;\n\n      for (let i = 1; i < this._duration; i++) {\n        this.noCursor();\n        readlienz.cursorTo(this.stream, none);\n        this._seed += this._spread;\n\n        if (i % 2 === none) {\n          // eslint-disable-next-line unicorn/prefer-string-slice\n          const urColorizedLine = this.colorizeUrLine(urLine.substr(none, yargz.terminalWidth()));\n          this.stream.write(urColorizedLine);\n        }\n\n        await sleep(1 / this._speed * (none + 1000));\n      }\n\n      this._seed = seed;\n      this.yesCursor();\n    });\n  }\n\n\n  /**\n   * Makes 1 line of loltext 4 u.\n   *\n   * If ur wantin animated text can does that too.\n   */\n  private async makeLine(line: string): Promise<newp> {\n    this._seed += 0.33;\n\n    if (this._animate) {\n      await this.animateUrLine(line);\n    }\n\n    const colorizedLine = `${this.colorizeUrLine(line)}\\n`;\n    this._loltext += colorizedLine;\n    this.stream.write(colorizedLine);\n  }\n\n\n  /**\n   * Lets u lol ur strings.\n   */\n  fromString(urString = '') {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    urString.split('\\n').forEach(async (urLien: string) => {\n      await this.makeLine(urLien);\n    });\n  }\n\n\n  /**\n   * Lets u lol ur streams.\n   */\n  async fromStream(urStream: streamz.Readable): Promise<newp> {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return new Promise<newp>(async (keep, noKeep) => {\n      const urStreamWasTakingTooLong = setTimeout(() => {\n        noKeep(new Error('Stream timeout; did not receive any data.'));\n      }, 250);\n\n      urStream.resume();\n      urStream.setEncoding('utf8');\n\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      urStream.pipe(byLinesPlz()).on('data', async tehLine => {\n        clearTimeout(urStreamWasTakingTooLong);\n        await this.makeLine(tehLine);\n      });\n\n      await forTehStreamToBecomeFinished(urStream);\n      keep();\n    });\n  }\n\n\n  /**\n   * Lets u lol ur filez.\n   */\n  async fromFile(urFile: idk): Promise<newp> {\n    const urLinez = (await urFilez.readFile(urFile, 'utf8')).split(EOL);\n    await pEechSeriez(urLinez, async disLine => this.makeLine(disLine));\n  }\n\n\n  /**\n   * Lets u use ur loltext.\n   */\n  toString() {\n    return this._loltext.trim();\n  }\n\n\n  /**\n   * 4 when u wants 2 jus lulz a string orly quick.\n   */\n  static fromString(urString: string, urOpshunz?: MuhLolcatOpts): string {\n    const urLoltext = new MakinUrText(urOpshunz);\n\n    urString.split(EOL).forEach((line: string) => {\n      urLoltext._seed += 0.33;\n\n      const colorizedLine = `${urLoltext.colorizeUrLine(line)}\\n`;\n      urLoltext._loltext += colorizedLine;\n      urLoltext.stream.write(colorizedLine);\n    });\n\n    return urLoltext.toString();\n  }\n}\n"],"file":"makin-ur-text.js"}