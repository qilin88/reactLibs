{"version":3,"sources":["../../src/bin/cli.ts"],"names":["cli","command","description","builder","positional","type","array","required","option","alias","default","TEH_DEFAULT_OPSHUNZ","spread","freq","seed","animate","speed","duration","usage","join","example","handler","argv","urLoltext","MakinUrText","stream","pipe","process","stdout","filez","length","push","urArg","fromStream","stdin","fromFile","init","err","output","console","error","fromString","message"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport cli, { Arguments } from '@darkobits/saffron';\nimport pEechSeriez from 'p-each-series';\n\nimport MakinUrText from 'lib/makin-ur-text';\nimport { TEH_DEFAULT_OPSHUNZ } from 'etc/constantz';\n\n\ninterface TehArgumentz extends Arguments {\n  filez: Array<string>;\n  force: boolean;\n  spread: number;\n  freq: number;\n  seed: number;\n  animate: boolean;\n  speed: number;\n  duration: number;\n}\n\n\ncli.command<TehArgumentz>({\n  command: '* <FILEZ..>',\n  description: '',\n  builder: ({ command }) => {\n    command.positional('FILEZ', {\n      description: 'Ur filez n ur streamz.',\n      type: 'string',\n      array: true,\n      required: true\n    });\n\n    command.option('force', {\n      type: 'boolean',\n      description: 'Force color even when stdout is not a TTY.',\n      alias: 'f'\n    });\n\n    command.option('spread', {\n      description: 'Rainbow spread.',\n      alias: 'p',\n      default: TEH_DEFAULT_OPSHUNZ.spread\n    });\n\n    command.option('freq', {\n      description: 'Rainbow frequency.',\n      alias: 'F',\n      default: TEH_DEFAULT_OPSHUNZ.freq\n    });\n\n    command.option('seed', {\n      description: 'Rainbow seed; 0 = random.',\n      alias: 'S',\n      default: TEH_DEFAULT_OPSHUNZ.seed\n    });\n\n    command.option('animate', {\n      description: 'Enable psychedelics.',\n      type: 'boolean',\n      alias: 'a',\n      default: TEH_DEFAULT_OPSHUNZ.animate\n    });\n\n    command.option('speed', {\n      description: 'Animation speed.',\n      alias: 's',\n      default: TEH_DEFAULT_OPSHUNZ.speed\n    });\n\n    command.option('duration', {\n      description: 'Animation duration.',\n      alias: 'd',\n      default: TEH_DEFAULT_OPSHUNZ.duration\n    });\n\n    command.usage([\n      '',\n      'Concatenate FILE(Z) or stndrd inputz to stndrd outputz.',\n      'Wif no FILE, or when FILE is \"-\", readz stndrd inputz.'\n    ].join('\\n'));\n\n    command.example('$0 foo - bar', 'Output foo\\'s contents, then stdin, then, bar\\'s contents.');\n    command.example('$0', 'Copy stdin to stdout.');\n    command.example('cowsay \"Sindre is a horse\" | lolcatjs', 'Because why not.');\n  },\n  handler: async ({ argv }) => {\n    const urLoltext = new MakinUrText({...TEH_DEFAULT_OPSHUNZ, ...argv});\n    urLoltext.stream.pipe(process.stdout);\n\n    if (argv.filez.length === 0) {\n      argv.filez.push('-');\n    }\n\n    await pEechSeriez(argv.filez, async urArg => {\n      return urArg === '-'\n        ? urLoltext.fromStream(process.stdin)\n        : urLoltext.fromFile(urArg);\n    });\n  }\n});\n\n\ncli.init(() => (err, argv, output) => {\n  if (err) {\n    console.error(MakinUrText.fromString(err.message ?? err));\n    return;\n  }\n\n  if (output) {\n    console.error(MakinUrText.fromString(output));\n    return;\n  }\n});\n"],"file":"cli.js"}