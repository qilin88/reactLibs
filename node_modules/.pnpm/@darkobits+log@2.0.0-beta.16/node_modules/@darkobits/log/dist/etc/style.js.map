{"version":3,"sources":["../../src/etc/style.ts"],"names":["DEFAULT_STYLE","style","timestamp","token","chalk","keyword","heading","prefix","levels","error","bgKeyword","warn","notice","http","timing","info","verbose","debug","silly"],"mappings":";;;;;;AAOA,MAAMA,aAAkC,GAAG;AACzCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,MAAd,EAAuB,IAAGF,KAAM,GAAhC,CADxB;AAELG,IAAAA,OAAO,EAAE,CAACH,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,YAAd,EAA4BF,KAA5B,CAFtB;AAGLI,IAAAA,MAAM,EAAE,CAACJ,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,SAAd,EAAyBF,KAAzB;AAHrB,GADkC;AAMzCK,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,WAAd,EAA2BK,SAA3B,CAAqC,OAArC,EAA8CP,KAA9C;AADpB,KADD;AAINQ,IAAAA,IAAI,EAAE;AACJV,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,OAAd,EAAuBK,SAAvB,CAAiC,MAAjC,EAAyCP,KAAzC;AADrB,KAJA;AAONS,IAAAA,MAAM,EAAE;AACNX,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,QAAd,EAAwBK,SAAxB,CAAkC,OAAlC,EAA2CP,KAA3C;AADnB,KAPF;AAUNU,IAAAA,IAAI,EAAE;AACJZ,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,eAAd,EAA+BF,KAA/B;AADrB,KAVA;AAaNW,IAAAA,MAAM,EAAE;AACNb,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,YAAd,EAA4BF,KAA5B;AADnB,KAbF;AAgBNY,IAAAA,IAAI,EAAE;AACJd,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,gBAAd,EAAgCF,KAAhC;AADrB,KAhBA;AAmBNa,IAAAA,OAAO,EAAE;AACPf,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,WAAd,EAA2BK,SAA3B,CAAqC,OAArC,EAA8CP,KAA9C;AADlB,KAnBH;AAsBNc,IAAAA,KAAK,EAAE;AACLhB,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsBF,KAAtB;AADpB,KAtBD;AAyBNe,IAAAA,KAAK,EAAE;AACLjB,MAAAA,KAAK,EAAE,CAACE,KAAD,EAAQC,KAAR,KAAkBA,KAAK,CAACC,OAAN,CAAc,OAAd,EAAuBK,SAAvB,CAAiC,WAAjC,EAA8CP,KAA9C;AADpB;AAzBD;AANiC,CAA3C;eAsCeH,a","sourcesContent":["import {LogOptions} from 'etc/types';\n\n\n/**\n * Default styles for the logger. This object will be merged with default\n * configuration (see config.ts) and any user-provided options.\n */\nconst DEFAULT_STYLE: Partial<LogOptions> = {\n  style: {\n    timestamp: (token, chalk) => chalk.keyword('gray')(`[${token}]`),\n    heading: (token, chalk) => chalk.keyword('ghostwhite')(token),\n    prefix: (token, chalk) => chalk.keyword('fuchsia')(token)\n  },\n  levels: {\n    error: {\n      style: (token, chalk) => chalk.keyword('orangered').bgKeyword('black')(token)\n    },\n    warn: {\n      style: (token, chalk) => chalk.keyword('black').bgKeyword('gold')(token)\n    },\n    notice: {\n      style: (token, chalk) => chalk.keyword('orange').bgKeyword('black')(token)\n    },\n    http: {\n      style: (token, chalk) => chalk.keyword('lightseagreen')(token)\n    },\n    timing: {\n      style: (token, chalk) => chalk.keyword('dodgerblue')(token)\n    },\n    info: {\n      style: (token, chalk) => chalk.keyword('mediumseagreen')(token)\n    },\n    verbose: {\n      style: (token, chalk) => chalk.keyword('royalblue').bgKeyword('black')(token)\n    },\n    debug: {\n      style: (token, chalk) => chalk.keyword('gray')(token)\n    },\n    silly: {\n      style: (token, chalk) => chalk.keyword('black').bgKeyword('gainsboro')(token)\n    }\n  }\n};\n\n\nexport default DEFAULT_STYLE;\n"],"file":"style.js"}