{"version":3,"sources":["../../src/lib/spinner.ts"],"names":["DEFAULT_OPTIONS","name","SpinnerFactory","userSpinnerOptions","spinner","spinnerOptions","ow","string","spinnerInfo","cliSpinners","Error","startTime","Date","now","frames","interval","toString","timeElapsed","curFrame","Math","floor","length"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AA6BA,MAAMA,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE;AADgB,CAAxB;;AASe,SAASC,cAAT,CAAwBC,kBAAkC,GAAG,EAA7D,EAAiE;AAC9E,QAAMC,OAAO,GAAG,kCAAhB;AAGA,QAAMC,cAAc,GAAG,wBAAgCL,eAAhC,EAAiDG,kBAAjD,CAAvB;AACA,mBAAGE,cAAc,CAACJ,IAAlB,EAAwB,cAAxB,EAAwCK,YAAGC,MAA3C;AAEA,QAAMC,WAAW,GAAGC,qBAAYJ,cAAc,CAACJ,IAA3B,CAApB;;AAEA,MAAI,CAACO,WAAL,EAAkB;AAChB,UAAM,IAAIE,KAAJ,CAAW,0BAAyBL,cAAc,CAACJ,IAAK,IAAxD,CAAN;AACD;;AAQD,QAAMU,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AAQA,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAqBP,WAA3B;;AAGAJ,EAAAA,OAAO,CAACY,QAAR,GAAmB,MAAM;AACvB,UAAMC,WAAW,GAAGL,IAAI,CAACC,GAAL,KAAaF,SAAjC;AACA,UAAMO,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,WAAW,GAAGF,QAAzB,IAAqCD,MAAM,CAACO,MAA7D;AACA,WAAOP,MAAM,CAACI,QAAD,CAAb;AACD,GAJD;;AAOA,SAAOd,OAAP;AACD","sourcesContent":["import cliSpinners, {SpinnerName} from 'cli-spinners';\nimport merge from 'deepmerge';\nimport ow from 'ow';\nimport {createOrphanedObject} from 'lib/utils';\n\n\n/**\n * Options object expected by SpinnerFactory and #createSpinner.\n */\nexport interface SpinnerOptions {\n  /**\n   * Spinner name to use.\n   *\n   * See: https://jsfiddle.net/sindresorhus/2eLtsbey/embedded/result/\n   *\n   * Default: 'dots'\n   */\n  name?: SpinnerName;\n}\n\n\n/**\n * Object returned by SpinnerFactory and #createSpinner.\n */\nexport interface Spinner {\n  toString(): string;\n}\n\n\n/**\n * Default spinner options.\n */\nconst DEFAULT_OPTIONS = {\n  name: 'dots' as SpinnerName\n};\n\n\n/**\n * Creates a new spinner using the provided options. The returned value may be\n * used directly in an interpolated string.\n */\nexport default function SpinnerFactory(userSpinnerOptions: SpinnerOptions = {}) {\n  const spinner = createOrphanedObject<Spinner>();\n\n  // Merge and validate options.\n  const spinnerOptions = merge<Required<SpinnerOptions>>(DEFAULT_OPTIONS, userSpinnerOptions);\n  ow(spinnerOptions.name, 'spinner name', ow.string);\n\n  const spinnerInfo = cliSpinners[spinnerOptions.name];\n\n  if (!spinnerInfo) {\n    throw new Error(`Invalid spinner name: \"${spinnerOptions.name}\".`);\n  }\n\n\n  /**\n   * @private\n   *\n   * Mark the time when the spinner was created.\n   */\n  const startTime = Date.now();\n\n\n  /**\n   * @private\n   *\n   * Get the list of frames and optimal update interval from cli-spinners.\n   */\n  const {frames, interval} = spinnerInfo;\n\n\n  spinner.toString = () => {\n    const timeElapsed = Date.now() - startTime;\n    const curFrame = Math.floor(timeElapsed / interval) % frames.length;\n    return frames[curFrame];\n  };\n\n\n  return spinner;\n}\n"],"file":"spinner.js"}