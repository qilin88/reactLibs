"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

const env = (variableName, strict = false) => {
  if (typeof variableName !== 'string' && typeof variableName !== 'number') {
    throw new TypeError(`[env] Expected first argument to be of type "string" or "number", got "${typeof variableName}".`);
  }

  if (typeof process === 'undefined') {
    throw new TypeError('[env] Global "process" does not exist.');
  }

  if (typeof process !== 'object') {
    throw new TypeError(`[env] Expected "process" to be of type "object", got "${typeof process}".`);
  }

  if (!Reflect.has(process, 'env')) {
    throw new Error('[env] "env" does not exist in object "process".');
  }

  if (typeof process.env !== 'object') {
    throw new TypeError(`[env] Expected "process.env" to be of type "object", got "${typeof process.env}".`);
  }

  const value = process.env[variableName];

  if (strict && value === undefined) {
    throw new Error(`[env] (Strict) "${variableName}" does not exist in object "process.env".`);
  }

  if (value === undefined) {
    return value;
  }

  try {
    return JSON.parse(value);
  } catch {
    return value;
  }
};

env.has = variableName => {
  return env(variableName) !== undefined;
};

env.eq = (variableName, value, strict = false) => {
  if (typeof value === 'object') {
    return JSON.stringify(value) === JSON.stringify(env(variableName, strict));
  }

  return env(variableName, strict) === value;
};

var _default = env;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=env.js.map